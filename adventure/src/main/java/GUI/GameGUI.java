/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import adventure.Engine;
import gameEntity.RoomDescription;
import games.TheItalianJob;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import parser.InvalidCommandException;
import parser.InvalidSentenceException;
import parser.ParserOutput;
import type.CommandType;

/**
 * Boundary
 * Classe che gestisce le operazioni di input-output con l'utente
 * tramin√¨te interfaccia grafica: legge la frase inserita su un jTectField
 * e stampa una stringa di risposta su un JTextPane
 * @author Barty
 */
public class GameGUI extends javax.swing.JFrame {

    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();
        //icona della bussola
        compassImg.setIcon(new javax.swing.ImageIcon(".\\resources\\img\\compass.png"));
        initGame();
    }

    /**
     * Crea un istanza della classe Engine per creare il parser,
     * inizzializza il gioco e stampa la intro.
     */
    private void initGame() {
        engine = new Engine(new TheItalianJob());
        appendToPane(readingPane, "\n" + RoomDescription.INTRO + "\n", Color.BLACK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        readingPane = new javax.swing.JTextPane();
        jButton = new javax.swing.JPanel();
        ovestButton = new javax.swing.JButton();
        compassImg = new javax.swing.JLabel();
        nordButton = new javax.swing.JButton();
        sudButton = new javax.swing.JButton();
        estButton = new javax.swing.JButton();
        enterButton = new javax.swing.JButton();
        lookAtButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inputTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        inventoryPane = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveMenu = new javax.swing.JMenuItem();
        loadMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        newGameMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Italian Job");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(1045, 600));

        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(1048, 550));

        jScrollPane1.setForeground(new java.awt.Color(0, 0, 0));

        readingPane.setEditable(false);
        readingPane.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        readingPane.setForeground(new java.awt.Color(0, 0, 0));
        readingPane.setSelectedTextColor(new java.awt.Color(0, 0, 51));
        jScrollPane1.setViewportView(readingPane);

        ovestButton.setText("W");
        ovestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ovestButtonActionPerformed(evt);
            }
        });

        nordButton.setLabel("N");
        nordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nordButtonActionPerformed(evt);
            }
        });

        sudButton.setText("S");
        sudButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sudButtonActionPerformed(evt);
            }
        });

        estButton.setText("E");
        estButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estButtonActionPerformed(evt);
            }
        });

        enterButton.setLabel("INVIO");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        lookAtButton.setText("OSSERVA");
        lookAtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lookAtButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jButtonLayout = new javax.swing.GroupLayout(jButton);
        jButton.setLayout(jButtonLayout);
        jButtonLayout.setHorizontalGroup(
            jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jButtonLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jButtonLayout.createSequentialGroup()
                        .addGroup(jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lookAtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jButtonLayout.createSequentialGroup()
                        .addComponent(ovestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jButtonLayout.createSequentialGroup()
                                .addComponent(compassImg, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(estButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53))
                            .addGroup(jButtonLayout.createSequentialGroup()
                                .addGroup(jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sudButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jButtonLayout.setVerticalGroup(
            jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ovestButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compassImg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sudButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lookAtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        inputTextField.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        inputTextField.setForeground(new java.awt.Color(0, 0, 0));
        inputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFieldActionPerformed(evt);
            }
        });
        inputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextFieldKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(inputTextField);

        inventoryPane.setEditable(false);
        inventoryPane.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        inventoryPane.setForeground(new java.awt.Color(0, 0, 0));
        inventoryPane.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        inventoryPane.setSelectionColor(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(inventoryPane);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        saveMenu.setText("Salva");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);

        loadMenu.setText("Carica");
        loadMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuActionPerformed(evt);
            }
        });
        jMenu1.add(loadMenu);
        jMenu1.add(jSeparator1);

        newGameMenu.setText("Nuova Partita");
        newGameMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newGameMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            enterButton.doClick();
        }
    }//GEN-LAST:event_inputTextFieldKeyPressed

    /**
     * Metodo che una volta premuto invio o il button associato
     * legge l'input inserito su un jTextPane lo fa analizzare al
     * parser, fa eseguire il comando dal metodo nextMove() implementato
     * dalla classe TheItalianJob' e ne stampa la risposta sul JTextPane.
     * @param evt 
     */
    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed

        // Prende il testo scritto dall'utente e lo stampa sul jTextPane
        String input = inputTextField.getText();
        appendToPane(readingPane, "\n> " + input + "\n", new Color(104, 140, 189));

        inputTextField.setText("");

        try {
            ParserOutput p = engine.getParser().parse(input, engine.getGame().getCommands(),
                    engine.getGame().getCurrentRoom().getObjects(), engine.getGame().getInventory(),
                    engine.getGame().getNpcs());

            //nel caso l'utente vuole terminare il gioco
            if (p.getCommand().getType() == CommandType.END) {
                int option;
                option = JOptionPane.showConfirmDialog(this, "Sei sicuro di voler chiudere il gioco?\n"
                        + "I progressi non salvati andranno persi.",
                        "Sei sicuro di voler chiudere il gioco",
                        JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    System.exit(0);
                }
            }
            // Una volta inviato il comando al gestore delle mosse, ne stampa la risposta sul jTextPane
            String output = engine.getGame().nextMove(p, engine);
            appendToPane(readingPane, "\n" + output + "\n", Color.BLACK);
        } catch (InvalidSentenceException | InvalidCommandException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error input insert", JOptionPane.ERROR_MESSAGE);
        }

        inventoryPane.setText("");
        appendToPane(inventoryPane, inventory(), new Color(104, 140, 189));
    }//GEN-LAST:event_enterButtonActionPerformed

    private void nordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nordButtonActionPerformed
        appendToPane(readingPane, "\n> " + "nord" + "\n", new Color(104, 140, 189));
        executeCommand("nord");

    }//GEN-LAST:event_nordButtonActionPerformed

    private void sudButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sudButtonActionPerformed
        appendToPane(readingPane, "\n> " + "sud" + "\n", new Color(104, 140, 189));
        executeCommand("sud");
    }//GEN-LAST:event_sudButtonActionPerformed

    private void estButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estButtonActionPerformed
        appendToPane(readingPane, "\n> " + "est" + "\n", new Color(104, 140, 189));
        executeCommand("est");
    }//GEN-LAST:event_estButtonActionPerformed

    private void ovestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ovestButtonActionPerformed
        appendToPane(readingPane, "\n> " + "ovest" + "\n", new Color(104, 140, 189));
        executeCommand("ovest");
    }//GEN-LAST:event_ovestButtonActionPerformed

    private void inputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTextFieldActionPerformed

    private void lookAtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lookAtButtonActionPerformed
        appendToPane(readingPane, "\n> " + "osserva" + "\n", new Color(104, 140, 189));
        executeCommand("osserva");
    }//GEN-LAST:event_lookAtButtonActionPerformed

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        executeCommand("salva");
    }//GEN-LAST:event_saveMenuActionPerformed

    private void loadMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuActionPerformed
        load();
    }//GEN-LAST:event_loadMenuActionPerformed

    private void newGameMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameMenuActionPerformed
        initGame();
        String newGame = "========================NUOVA PARTITA========================";
        readingPane.setText("");
        appendToPane(readingPane, "\n" + newGame + "\n", Color.BLACK);
        inputTextField.setText("");
        inventoryPane.setText("");
        appendToPane(readingPane, "\n" + RoomDescription.INTRO + "\n", Color.BLACK);
    }//GEN-LAST:event_newGameMenuActionPerformed

    /**
     * Metodo che esegue il comando associato a un JButton e stampa
     * la risposta sul JTextPane
     * @param move 
     */
    private void executeCommand(String move) {
        try {
            ParserOutput pa = engine.getParser().parse(move, engine.getGame().getCommands(),
                    engine.getGame().getCurrentRoom().getObjects(), engine.getGame().getInventory(),
                    engine.getGame().getNpcs());
            appendToPane(readingPane, "\n" + engine.getGame().nextMove(pa, engine) + "\n", Color.BLACK);
        } catch (InvalidSentenceException | InvalidCommandException e) {
            appendToPane(readingPane, "\n" + e.getMessage() + "\n", Color.BLACK);
        }
    }

    /**
     * Ritorna una stringa contenente i nomi degli oggetti presenti nell'inventario
     * @return 
     */
    private String inventory() {
        String answer = new String();
        answer = engine.getGame().getInventory()
                .stream()
                .map(o -> "- " + o.getName().toUpperCase() + "\n")
                .reduce(answer, String::concat);
        return answer;
    }

    /**
     * Metodo per stampare sul JTextPane
     * @param tp
     * @param msg
     * @param c 
     */
    private void appendToPane(JTextPane tp, String msg, Color c) {

        try {

            StyledDocument sDoc = tp.getStyledDocument();

            // Aggiungo come attributo il colore desiderato c
            SimpleAttributeSet sAttrSet = new SimpleAttributeSet();
            StyleConstants.setForeground(sAttrSet, c);

            // Inserisco la stringa in coda, con gli attributi desiderati
            sDoc.insertString(sDoc.getLength(), msg, sAttrSet);

        } catch (BadLocationException e) {
            JOptionPane.showMessageDialog(this, "Errore: " + e.getMessage(), e.getMessage(), JOptionPane.ERROR_MESSAGE);
        }

    }

    public void load() {
        executeCommand("carica");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GameGUI().setVisible(true);
        });
    }

    private Engine engine;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel compassImg;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton estButton;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JTextPane inventoryPane;
    private javax.swing.JPanel jButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem loadMenu;
    private javax.swing.JButton lookAtButton;
    private javax.swing.JMenuItem newGameMenu;
    private javax.swing.JButton nordButton;
    private javax.swing.JButton ovestButton;
    private javax.swing.JTextPane readingPane;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JButton sudButton;
    // End of variables declaration//GEN-END:variables
}
